{"version":3,"file":"main.160451d088b1ee87aabc.bundle.js","mappings":"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","sources":["webpack://base-react-core/./src/app/store/Step/StepSlice.ts","webpack://base-react-core/./src/app/store/index.ts","webpack://base-react-core/./src/app/hooks/useRedux.ts","webpack://base-react-core/./src/app/components/Form/Form.tsx","webpack://base-react-core/./src/app/hooks/useFormState.ts","webpack://base-react-core/./src/app/containers/StepForm/components/Step1.tsx","webpack://base-react-core/./src/app/containers/StepForm/components/Step2.tsx","webpack://base-react-core/./src/app/containers/StepForm/components/Step3.tsx","webpack://base-react-core/./src/app/containers/StepForm/components/ShowDetails.tsx","webpack://base-react-core/./src/app/containers/StepForm/StepForm.tsx","webpack://base-react-core/./src/app/helper/localStorage.ts","webpack://base-react-core/./src/app/pages/Dashboard/Dashboard.tsx","webpack://base-react-core/./src/app/routes/routesMap.tsx","webpack://base-react-core/./src/app/routes/Routes.tsx","webpack://base-react-core/./src/app/global.style.ts","webpack://base-react-core/./src/app/app.tsx","webpack://base-react-core/./src/index.tsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst stepReducer = createSlice({\r\n\tname: 'step',\r\n\tinitialState: {\r\n\t\tstep: 1,\r\n\t},\r\n\treducers: {\r\n\t\tsetStep: (state, action) => {\r\n\t\t\tstate.step = action.payload\r\n\t\t},\r\n\t\tgoToNextStep: (state) => {\r\n\t\t\tstate.step += 1\r\n\t\t},\r\n\t\tgoToPreviousStep: (state) => {\r\n\t\t\tstate.step -= 1\r\n\t\t},\r\n\t\tresetStep: (state) => {\r\n\t\t\tstate.step = 1\r\n\t\t},\r\n\t},\r\n})\r\n\r\nexport const { setStep, resetStep, goToNextStep, goToPreviousStep } =\r\n\tstepReducer.actions\r\nexport default stepReducer.reducer\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { stepReducer } from './Step'\r\nexport const store = configureStore({\r\n\treducer: {\r\n\t\tstepReducer,\r\n\t},\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { AppDispatch, RootState } from 'app/store'\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n","import React, { FC } from 'react'\r\n\r\ninterface FormType {\r\n\tonSubmit: React.FormEventHandler<HTMLFormElement>\r\n}\r\n\r\nconst Form: FC<FormType> = ({ onSubmit, children }) => {\r\n\treturn <form onSubmit={onSubmit}>{children}</form>\r\n}\r\n\r\nexport default Form\r\n","import { useState } from 'react'\r\n\r\nfunction useFormState<T>(key: string, initialValue?: T) {\r\n\tconst [storedValue, setStoredValue] = useState<T>(() => {\r\n\t\ttry {\r\n\t\t\tconst item = window.localStorage.getItem(key)\r\n\r\n\t\t\treturn item ? JSON.parse(item) : initialValue\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t\treturn initialValue\r\n\t\t}\r\n\t})\r\n\r\n\tconst setValue = (value: T | ((val: T) => T)) => {\r\n\t\ttry {\r\n\t\t\tconst valueToStore =\r\n\t\t\t\tvalue instanceof Function ? value(storedValue) : value\r\n\r\n\t\t\tsetStoredValue(valueToStore)\r\n\r\n\t\t\twindow.localStorage.setItem(key, JSON.stringify(valueToStore))\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t}\r\n\treturn [storedValue, setValue] as const\r\n}\r\n\r\nexport { useFormState }\r\n","import React from 'react'\r\n\r\nimport { useFormState } from 'hooks/useFormState'\r\n\r\ninterface IStepForm {\r\n\tname?: string\r\n\tjob?: string\r\n}\r\n\r\nconst Step1 = () => {\r\n\tconst [value, setValue] = useFormState<IStepForm>('formData', {\r\n\t\tname: '',\r\n\t\tjob: '',\r\n\t})\r\n\r\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValue({\r\n\t\t\tname: event.target.value,\r\n\t\t})\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<label>Name</label>\r\n\t\t\t<input type='text' value={value.name} onChange={(e) => handleChange(e)} />\r\n\t\t\t<button type='submit'>continue</button>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Step1\r\n","import { useFormState } from 'hooks/useFormState'\r\nimport { useAppDispatch } from 'hooks/useRedux'\r\nimport React from 'react'\r\nimport { goToPreviousStep } from 'store/Step'\r\n\r\nconst Step2 = () => {\r\n\tconst [value, setValue] = useFormState('formData', {\r\n\t\tjob: '',\r\n\t})\r\n\tconst dispatch = useAppDispatch()\r\n\r\n\tconst goBack = () => {\r\n\t\tdispatch(goToPreviousStep())\r\n\t}\r\n\r\n\tconst handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValue({\r\n\t\t\t...value,\r\n\t\t\tjob: event.target.value,\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<label>Job</label>\r\n\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={value.job}\r\n\t\t\t\tonChange={(e) => handleOnChange(e)}\r\n\t\t\t/>\r\n\t\t\t<button type='button' onClick={goBack}>\r\n\t\t\t\tBack\r\n\t\t\t</button>\r\n\t\t\t<button type='submit'>Continue</button>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Step2\r\n","import React from 'react'\r\nimport { goToPreviousStep } from 'store/Step'\r\nimport { useAppDispatch } from 'hooks/useRedux'\r\nimport { useFormState } from 'hooks/useFormState'\r\n\r\nconst Step3 = () => {\r\n\tconst [value, setValue] = useFormState('formData', {\r\n\t\tcompany: '',\r\n\t})\r\n\tconst dispatch = useAppDispatch()\r\n\r\n\tconst goBack = () => {\r\n\t\tdispatch(goToPreviousStep())\r\n\t}\r\n\r\n\tconst handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValue({\r\n\t\t\t...value,\r\n\t\t\tcompany: event.target.value,\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<label>Company</label>\r\n\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={value.company}\r\n\t\t\t\tonChange={(e) => handleOnChange(e)}\r\n\t\t\t/>\r\n\t\t\t<button type='button' onClick={goBack}>\r\n\t\t\t\tBack\r\n\t\t\t</button>\r\n\t\t\t<button type='submit'>Continue</button>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Step3\r\n","import React from 'react'\r\nimport { useFormState } from 'hooks/useFormState'\r\nimport { useAppDispatch } from 'hooks/useRedux'\r\nimport { goToPreviousStep } from 'store/Step'\r\n\r\ninterface IFormData {\r\n\tname: string\r\n\tjob: string\r\n\tcompany: string\r\n}\r\n\r\nconst ShowDetails = () => {\r\n\tconst dispatch = useAppDispatch()\r\n\tconst [formData] = useFormState<IFormData>('formData')\r\n\r\n\tconst goBack = () => {\r\n\t\tdispatch(goToPreviousStep())\r\n\t}\r\n\treturn formData ? (\r\n\t\t<div>\r\n\t\t\t<p>{formData.name}</p>\r\n\t\t\t<p>{formData.job}</p>\r\n\t\t\t<p>{formData.company}</p>\r\n\t\t\t<button type='button' onClick={goBack}>\r\n\t\t\t\tBack\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t) : (\r\n\t\t<>\r\n\t\t\t<p>No data</p>\r\n\t\t\t<button type='submit'>Return to step 1</button>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ShowDetails\r\n","import React, { useEffect } from 'react'\r\n\r\nimport { goToNextStep, resetStep } from 'store/Step'\r\nimport { useAppDispatch } from 'hooks/useRedux'\r\nimport { useAppSelector } from 'hooks/useRedux'\r\nimport { localStorageService } from 'helper/localStorage'\r\n\r\nimport Form from 'components/Form'\r\nimport Step1 from './components/Step1'\r\nimport Step2 from './components/Step2'\r\nimport Step3 from './components/Step3'\r\nimport { useFormState } from 'hooks/useFormState'\r\nimport ShowDetails from './components/ShowDetails'\r\n\r\nconst initialForm = {\r\n\tname: '',\r\n\tjob: '',\r\n\tcompany: '',\r\n}\r\n\r\nconst StepForm = () => {\r\n\tconst [formData] = useFormState('formData', initialForm)\r\n\tconst { step } = useAppSelector((state) => state.stepReducer)\r\n\tconst dispatch = useAppDispatch()\r\n\tconst [remove] = localStorageService()\r\n\r\n\tconst renderStep = (step: number) => {\r\n\t\tswitch (step) {\r\n\t\t\tcase 1:\r\n\t\t\t\treturn <Step1 />\r\n\t\t\tcase 2:\r\n\t\t\t\treturn <Step2 />\r\n\t\t\tcase 3:\r\n\t\t\t\treturn <Step3 />\r\n\t\t\tcase 4:\r\n\t\t\t\treturn <ShowDetails />\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmit = (event: any) => {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tswitch (step) {\r\n\t\t\tcase 1:\r\n\t\t\t\tdispatch(goToNextStep())\r\n\t\t\t\tbreak\r\n\t\t\tcase 2:\r\n\t\t\t\tdispatch(goToNextStep())\r\n\t\t\t\tbreak\r\n\t\t\tcase 3:\r\n\t\t\t\tdispatch(goToNextStep())\r\n\t\t\t\tbreak\r\n\t\t\tcase 4:\r\n\t\t\t\tremove('formData')\r\n\t\t\t\tdispatch(resetStep())\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {}, [formData])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tCurrent step <strong>{step}</strong>\r\n\t\t\t<Form onSubmit={onSubmit}>{renderStep(step)}</Form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default StepForm\r\n","export const localStorageService = () => {\r\n\tconst localStorage = window.localStorage\r\n\r\n\tconst remove = (key: string) => {\r\n\t\tlocalStorage.removeItem(key)\r\n\t}\r\n\r\n\tconst clear = () => {\r\n\t\tlocalStorage.clear()\r\n\t}\r\n\r\n\treturn [remove, clear]\r\n}\r\n","import StepForm from 'containers/StepForm'\r\nimport React from 'react'\r\n\r\nconst Dashboard = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Hello human</h1>\r\n\t\t\t<h2>This is react core</h2>\r\n\r\n\t\t\t<StepForm />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { lazy } from 'react'\r\nimport { Redirect } from 'react-router'\r\nimport { IRoute } from 'models/IRoute'\r\n\r\nimport Dashboard from 'pages/Dashboard'\r\n\r\nexport const PATH_NAME = {\r\n\tROOT: '/',\r\n\tERROR_404: '/404',\r\n\tDASHBOARD: '/dashboard',\r\n}\r\n\r\nconst Error404View = lazy(() => import('containers/ErrorBoundary'))\r\n\r\nconst routesMap: IRoute[] = [\r\n\t{\r\n\t\texact: true,\r\n\t\tpath: PATH_NAME.ROOT,\r\n\t\tcomponent: () => <Redirect to={PATH_NAME.DASHBOARD} />,\r\n\t},\r\n\t{\r\n\t\texact: true,\r\n\t\tpath: PATH_NAME.ERROR_404,\r\n\t\tcomponent: Error404View,\r\n\t},\r\n\r\n\t{\r\n\t\texact: true,\r\n\t\tpath: PATH_NAME.DASHBOARD,\r\n\t\tcomponent: Dashboard,\r\n\t},\r\n\r\n\t{\r\n\t\tpath: '*',\r\n\t\troutes: [\r\n\t\t\t{\r\n\t\t\t\tcomponent: () => <Redirect to={PATH_NAME.ERROR_404} />,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n]\r\n\r\nexport default routesMap\r\n","import React, { FC, Fragment, Suspense } from 'react'\r\nimport { Route, Switch } from 'react-router'\r\n\r\nimport { IRoute } from 'models/IRoute'\r\nimport routesMap from './routesMap'\r\n\r\nconst renderRoutes = (routes: IRoute[]) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{routes ? (\r\n\t\t\t\t<Suspense fallback={<div />}>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t{routes.map((route: IRoute, idx: number) => {\r\n\t\t\t\t\t\t\tconst Layout = route.layout || Fragment\r\n\t\t\t\t\t\t\tconst Component = route.component\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\t\t\tkey={`routes-${idx}`}\r\n\t\t\t\t\t\t\t\t\tpath={route.path}\r\n\t\t\t\t\t\t\t\t\texact={route.exact}\r\n\t\t\t\t\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t\t\t\t\t<Layout>\r\n\t\t\t\t\t\t\t\t\t\t\t{route.routes ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\trenderRoutes(route.routes)\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</Layout>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Suspense>\r\n\t\t\t) : null}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst Routes: FC = () => {\r\n\treturn renderRoutes(routesMap)\r\n}\r\n\r\nexport default Routes\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html,body { \r\n    height: 100%; \r\n    margin: 0px; \r\n    padding: 0px; \r\n  }\r\n  div, a, p, span {\r\n    font-family: -apple-system, 'Manrope', sans-serif;\r\n    line-height: normal;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n  #root {\r\n    height: 100%;\r\n  }\r\n`\r\n","import React, { FC } from 'react'\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport Routes from 'routes/Routes'\r\nimport { GlobalStyle } from './global.style'\r\n\r\nconst App: FC = () => {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<GlobalStyle />\r\n\t\t\t<Routes />\r\n\t\t</Router>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","import '@babel/polyfill'\r\nimport * as React from 'react'\r\nimport * as ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from 'store'\r\n\r\nimport Application from './app/app'\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<Application />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n)\r\n"],"names":["stepReducer","createSlice","name","initialState","step","reducers","setStep","state","action","payload","goToNextStep","goToPreviousStep","resetStep","actions","store","configureStore","reducer","useAppDispatch","useDispatch","useAppSelector","useSelector","onSubmit","children","useFormState","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","job","setValue","type","onChange","e","target","dispatch","event","onClick","company","formData","initialForm","remove","removeItem","clear","useEffect","preventDefault","renderStep","PATH_NAME","exact","path","component","to","lazy","Dashboard","routes","renderRoutes","Suspense","fallback","map","route","idx","Layout","layout","Fragment","Component","render","props","routesMap","GlobalStyle","createGlobalStyle","ReactDOM","document","getElementById"],"sourceRoot":""}