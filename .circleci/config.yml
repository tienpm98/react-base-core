version: 2.1

orbs:
  node: circleci/node@4.7
  docker: circleci/docker@2.0.1

jobs:
  build-and-push:
    environment:
      DOCKER_IMAGE: tienpm24/react-core
      DOCKER_TAG: latest
    executor: docker/docker

    steps:
      - setup_remote_docker
      - checkout
      - docker/check:
          docker-username: DOCKER_USER
          docker-password: DOCKER_PASSWORD
      - docker/build:
          image: $DOCKER_IMAGE
          tag: $DOCKER_TAG
      - docker/push:
          digest-path: /tmp/digest.txt
          image: $DOCKER_IMAGE
          tag: $DOCKER_TAG
      - run:
          command: |
            echo "Digest is: $(</tmp/digest.txt)"

  deploy:
    executor: docker/docker
    steps: 
      - add_ssh_keys: 
          fingerprints:
            - "ad:dc:0d:3f:a3:64:95:8f:a6:c7:31:9f:85:e4:c4:b8"
      - run: 
          name: AWS EC2 Deploy
          command: |

           # 1- Install AWS CLI
            curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
            unzip awscli-bundle.zip
            ./awscli-bundle/install -b ~/bin/aws
            # 2- Get the public IP of the current CircleCI runner
            PUBLIC_IP=$(curl ipinfo.io/ip)
            # 3- Get AWS Region# TODO Don't forget to replcae by your own Region
            AWS_REGION=us-east-2
            # 4- Get SG ID
            SG_ID=sg-01f904deea54d9e89
            # 5- Add an ingress rule to the security group
            ~/bin/aws ec2 authorize-security-group-ingress --region $AWS_REGION --group-id $SG_ID \
              --protocol tcp --port 22 --cidr $PUBLIC_IP/24
            # 6- Give the ingress rule some time to propogate
            sleep 5
            # 7- SSH to the server to deploy
            # TODO Change to your username
            EC2_USERNAME=ubuntu
            # TODO Change to your server's URL or public IP
            EC2_PUBLIC_DNS=18.223.238.36
            

            ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_PUBLIC_DNS "./deploy.sh"
     
            ~/bin/aws ec2 revoke-security-group-ingress --region $AWS_REGION --group-id $SG_ID \
              --protocol tcp --port 22 --cidr $PUBLIC_IP/24

workflows:
  pipeline:
    jobs:
      - build-and-push:
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - build-and-push